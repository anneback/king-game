local function animate(self)
	local a = ""
	if self.dir.x > 0 then
		a = "right"
	elseif self.dir.x < 0 then
		a = "left"
	elseif self.dir.y > 0 then
		a = "up"
	elseif self.dir.y < 0 then
		a = "down"
	end
	
	if a ~= self.current_anim then
		msg.post("#sprite", "play_animation", { id = hash("player-" .. a) })
		self.current_anim = a
	end
end

function init(self)
	print("Initializing super awesome game!")
	-- # script itself
    msg.post("#", "acquire_input_focus")
    
    self.input = vmath.vector3() -- vector with 3 directions
    self.speed = 50 -- px per second
    self.dir = vmath.vector3(0, 1, 0)
    self.moving = false
    self.firing = false
    
    self.current_anim = ""
end

function final(self)
    print("Closing frekking awesome game")
end

function update(self, dt) -- dt sent to update each frame
	if self.moving then 
	    local pos = go.get_position("player")
		pos = pos + self.input * self.speed * dt
		go.set_position(pos, "player")
	end
	
	animate(self)
	
	if self.firing then
		local pos = go.get_position("player")
		local angle = math.atan2(self.dir.y, self.dir.x)
		local rot = vmath.quat_rotation_z(angle)
		factory.create("#rocketfactory", pos, rot, {dir = self.dir})
	end
	
	-- reset working vars
	self.input.x = 0
	self.input.y = 0
	self.moving = false
	self.firing = false
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("up") then
		self.input.y = 1
	elseif action_id == hash("down") then
		self.input.y = -1
	elseif action_id == hash("right") then
		self.input.x = 1
	elseif action_id == hash("left") then
		self.input.x = -1
	elseif action_id == hash("fire") and action.pressed then
		self.firing = true
	end
	
	if vmath.length(self.input) > 0 then
		self.moving = true
		self.dir = vmath.normalize(self.input) -- to not get sqrt(2) for diagonal
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
